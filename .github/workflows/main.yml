# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Run a zip
        run: |
          cd /home/runner/work/Ghost/Ghost/
          zip -r /tmp/main.zip .
          cd -
      
      - name: Create/Update Release
        id: update_release
        uses: actions/update-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: latest
          release_name: Release latest
          body: Latest Build
          generate_release_notes: true
          #tag_name: ${{ github.ref }}
          #release_name: Release ${{ github.ref }} 
          #body: |
          #  Changes in this Release
          #  - First Change
          #  - Second Change
          draft: false
          prerelease: false
      - name: Run a ls
        run: |
          ls -ltr
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          #asset_path: ./Ghost-${{ github.ref }}.zip
          #asset_name: Ghost-${{ github.ref }}.zip
          asset_path: /tmp/main.zip
          asset_name: main.zip
          asset_content_type: application/zip
